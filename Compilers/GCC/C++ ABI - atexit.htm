<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0067)http://www.opengroup.org/onlinepubs/009695399/functions/atexit.html -->
<HTML><HEAD><TITLE>atexit</TITLE>
<META content="MSHTML 6.00.2900.2873" name=GENERATOR>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><LINK 
href="C++ ABI - atexit-Dateien/style.css" type=text/css rel=stylesheet><!-- Generated by The Open Group's rhtm tool v1.2.1 --><!-- Copyright (c) 2001-2004 IEEE and The Open Group, All Rights Reserved --></HEAD>
<BODY bgColor=white>
<SCRIPT language=JavaScript src="C++ ABI - atexit-Dateien/codes.js" 
type=text/javascript>
</SCRIPT>
<BASEFONT><A name=atexit></A><A name=tag_03_32></A><!-- atexit --><!--header start-->
<CENTER><FONT size=2>The Open Group Base Specifications Issue 6<BR>IEEE Std 
1003.1, 2004 Edition<BR>Copyright © 2001-2004 The IEEE and The Open Group, All 
Rights reserved.</FONT></CENTER><!--header end-->
<HR noShade SIZE=2>

<H4><A name=tag_03_32_01></A>NAME</H4>
<BLOCKQUOTE>atexit - register a function to run at process 
termination</BLOCKQUOTE>
<H4><A name=tag_03_32_02></A>SYNOPSIS</H4>
<BLOCKQUOTE class=synopsis>
  <P><CODE><TT>#include &lt;<A 
  href="http://www.opengroup.org/onlinepubs/009695399/basedefs/stdlib.h.html">stdlib.h</A>&gt;<BR><BR>int 
  atexit(void (*</TT><I>func</I><TT>)(void));<BR></TT></CODE></P></BLOCKQUOTE>
<H4><A name=tag_03_32_03></A>DESCRIPTION</H4>
<BLOCKQUOTE>
  <DIV class=box><SUP>[<A href="javascript:open_code('CX')">CX</A>]</SUP> <IMG 
  alt="[Option Start]" src="C++ ABI - atexit-Dateien/opt-start.gif" border=0> 
  The functionality described on this reference page is aligned with the 
  ISO&nbsp;C standard. Any conflict between the requirements described here and 
  the ISO&nbsp;C standard is unintentional. This volume of 
  IEEE&nbsp;Std&nbsp;1003.1-2001 defers to the ISO&nbsp;C standard. <IMG 
  alt="[Option End]" src="C++ ABI - atexit-Dateien/opt-end.gif" border=0></DIV>
  <P>The <I>atexit</I>() function shall register the function pointed to by 
  <I>func</I>, to be called without arguments at normal program termination. At 
  normal program termination, all functions registered by the <I>atexit</I>() 
  function shall be called, in the reverse order of their registration, except 
  that a function is called after any previously registered functions that had 
  already been called at the time it was registered. Normal termination occurs 
  either by a call to <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  or a return from <I>main</I>().</P>
  <P>At least 32 functions can be registered with <I>atexit</I>().</P>
  <P><SUP>[<A href="javascript:open_code('CX')">CX</A>]</SUP> <IMG 
  alt="[Option Start]" src="C++ ABI - atexit-Dateien/opt-start.gif" border=0> 
  After a successful call to any of the <I><A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exec.html">exec</A></I> 
  functions, any functions previously registered by <I>atexit</I>() shall no 
  longer be registered. <IMG alt="[Option End]" 
  src="C++ ABI - atexit-Dateien/opt-end.gif" border=0></P></BLOCKQUOTE>
<H4><A name=tag_03_32_04></A>RETURN VALUE</H4>
<BLOCKQUOTE>
  <P>Upon successful completion, <I>atexit</I>() shall return 0; otherwise, it 
  shall return a non-zero value.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_05></A>ERRORS</H4>
<BLOCKQUOTE>
  <P>No errors are defined.</P></BLOCKQUOTE>
<HR>

<DIV class=box><EM>The following sections are informative.</EM></DIV>
<H4><A name=tag_03_32_06></A>EXAMPLES</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_07></A>APPLICATION USAGE</H4>
<BLOCKQUOTE>
  <P>The functions registered by a call to <I>atexit</I>() must return to ensure 
  that all registered functions are called.</P>
  <P>The application should call <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/sysconf.html"><I>sysconf</I>()</A> 
  to obtain the value of {ATEXIT_MAX}, the number of functions that can be 
  registered. There is no way for an application to tell how many functions have 
  already been registered with <I>atexit</I>().</P>
  <P>Since the behavior is undefined if the <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  function is called more than once, portable applications calling 
  <I>atexit</I>() must ensure that the <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  function is not called at normal process termination when all functions 
  registered by the <I>atexit</I>() function are called.</P>
  <P>All functions registered by the <I>atexit</I>() function are called at 
  normal process termination, which occurs by a call to the <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  function or a return from <I>main</I>() or on the last thread termination, 
  when the behavior is as if the implementation called <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  with a zero argument at thread termination time.</P>
  <P>If, at normal process termination, a function registered by the 
  <I>atexit</I>() function is called and a portable application needs to stop 
  further <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A> 
  processing, it must call the <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/_exit.html"><I>_exit</I>()</A> 
  function or the <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/_Exit.html"><I>_Exit</I>()</A> 
  function or one of the functions which cause abnormal process 
termination.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_08></A>RATIONALE</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_09></A>FUTURE DIRECTIONS</H4>
<BLOCKQUOTE>
  <P>None.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_10></A>SEE ALSO</H4>
<BLOCKQUOTE>
  <P><A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><I>exit</I>()</A>, 
  <A 
  href="http://www.opengroup.org/onlinepubs/009695399/functions/sysconf.html"><I>sysconf</I>()</A>, 
  the Base Definitions volume of IEEE&nbsp;Std&nbsp;1003.1-2001, <A 
  href="http://www.opengroup.org/onlinepubs/009695399/basedefs/stdlib.h.html"><I>&lt;stdlib.h&gt;</I></A></P></BLOCKQUOTE>
<H4><A name=tag_03_32_11></A>CHANGE HISTORY</H4>
<BLOCKQUOTE>
  <P>First released in Issue 4. Derived from the ANSI&nbsp;C 
standard.</P></BLOCKQUOTE>
<H4><A name=tag_03_32_12></A>Issue 6</H4>
<BLOCKQUOTE>
  <P>Extensions beyond the ISO&nbsp;C standard are marked.</P>
  <P>The DESCRIPTION is updated for alignment with the ISO/IEC&nbsp;9899:1999 
  standard.</P>
  <P>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;2-2004, item XSH/TC2/D6/19 is 
  applied, adding further clarification to the APPLICATION USAGE 
section.</P></BLOCKQUOTE>
<DIV class=box><EM>End of informative text.</EM></DIV>
<HR noShade SIZE=2>

<CENTER><FONT size=2><!--footer start-->UNIX ® is a registered Trademark of The 
Open Group.<BR>POSIX ® is a registered Trademark of The IEEE.<BR>[ <A 
href="http://www.opengroup.org/onlinepubs/009695399/mindex.html">Main Index</A> 
| <A 
href="http://www.opengroup.org/onlinepubs/009695399/basedefs/contents.html">XBD</A> 
| <A 
href="http://www.opengroup.org/onlinepubs/009695399/utilities/contents.html">XCU</A> 
| <A 
href="http://www.opengroup.org/onlinepubs/009695399/functions/contents.html">XSH</A> 
| <A 
href="http://www.opengroup.org/onlinepubs/009695399/xrat/contents.html">XRAT</A> 
]</FONT></CENTER><!--footer end-->
<HR noShade SIZE=2>
</BASEFONT></BODY></HTML>
